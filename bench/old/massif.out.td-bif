desc: (none)
cmd: ../rp-td -q ./bif.in
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=132715523
mem_heap_B=72007280
mem_heap_extra_B=8957712
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=240648115
mem_heap_B=136073440
mem_heap_extra_B=16255752
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=3
#-----------
time=345931053
mem_heap_B=211030024
mem_heap_extra_B=30044024
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=508784005
mem_heap_B=337486656
mem_heap_extra_B=43635088
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=5
#-----------
time=635548395
mem_heap_B=387533432
mem_heap_extra_B=52769000
mem_stacks_B=0
heap_tree=detailed
n16: 387533432 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 112747488 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 84766920 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 84753984 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 55622112 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 55622112 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n2: 30990456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 19736136 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 19736136 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 17757768 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 17757768 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 17757768 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 17757768 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 17757768 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 17757768 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 17757768 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 17757768 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 17757768 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 17757768 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 17757768 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 17757768 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 17757768 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 17757768 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 17757768 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n1: 11254320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
        n2: 11254320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
            n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 10924368 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10924368 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 10924368 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 10924368 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 10924368 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 10924368 0x402B12: main (rp.cc:100)
         n0: 329952 in 1 place, below massif's threshold (1.00%)
      n1: 24629808 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 24629808 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 24629808 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 24629808 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24629808 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 24629808 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 24629808 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 24629808 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 24629808 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 24629808 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 24629808 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 24629808 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 24629808 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 24629808 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 24629808 0x402B12: main (rp.cc:100)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 16720704 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 16720704 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n0: 4405800 in 2 places, all below massif's threshold (1.00%)
    n1: 12411168 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 12411168 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n1: 24635520 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3345048 in 5 places, all below massif's threshold (1.00%)
 n1: 41382264 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 41382264 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n1: 4421592 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n0: 4421592 in 3 places, all below massif's threshold (1.00%)
   n0: 7392 in 1 place, below massif's threshold (1.00%)
 n3: 36396720 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 23895792 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 23895792 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n2: 13336128 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 8498520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 8498520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 7626528 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 7626528 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 7626528 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 7626528 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 7626528 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 7626528 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 7626528 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 7626528 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 7626528 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 7626528 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 7626528 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 7626528 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 7626528 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 7626528 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 7626528 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n1: 4837608 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n2: 4837608 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 4691520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 4691520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 4691520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 4691520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 4691520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 4691520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 4691520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 4691520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 4691520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 4691520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 4691520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 4691520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 4691520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 4691520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 4691520 0x402B12: main (rp.cc:100)
       n0: 146088 in 1 place, below massif's threshold (1.00%)
    n1: 10558080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 10558080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 10558080 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 10558080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 10558080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 10558080 0x402B12: main (rp.cc:100)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 7177392 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n2: 7177392 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 5279040 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 5279040 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 5279040 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 5279040 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 5279040 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 5279040 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 5279040 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 5279040 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 5279040 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 5279040 0x402B12: main (rp.cc:100)
    n0: 1898352 in 2 places, all below massif's threshold (1.00%)
  n1: 5323536 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n2: 5323536 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 5279040 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 5279040 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 5279040 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 5279040 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 5279040 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 5279040 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 5279040 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 5279040 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 5279040 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 5279040 0x402B12: main (rp.cc:100)
    n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 33554432 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 33554432 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n2: 33554432 0x423995: Env::from(Env const*) (env.h:266)
    n1: 33554432 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
     n1: 33554432 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
      n1: 33554432 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 33554432 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 33554432 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 33554432 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 33554432 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 33554432 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 33554432 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 33554432 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
              n1: 33554432 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 33554432 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
                n1: 33554432 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
                 n1: 33554432 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                  n1: 33554432 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                   n1: 33554432 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                    n1: 33554432 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                     n1: 33554432 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                      n1: 33554432 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                       n1: 33554432 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                        n1: 33554432 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                         n0: 33554432 0x402B12: main (rp.cc:100)
    n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 10 places, all below massif's threshold (1.00%)
 n3: 32352640 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 21240704 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 21240704 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n2: 11854336 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 7554240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 7554240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 6779136 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 6779136 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 6779136 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 6779136 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 6779136 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 6779136 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 6779136 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 6779136 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 6779136 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 6779136 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 6779136 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 6779136 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 6779136 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 6779136 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 6779136 0x402B12: main (rp.cc:100)
       n0: 775104 in 1 place, below massif's threshold (1.00%)
     n0: 4300096 in 1 place, below massif's threshold (1.00%)
    n1: 9384960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 9384960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 9384960 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 9384960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 9384960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 9384960 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 9384960 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 9384960 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 9384960 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 9384960 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 9384960 0x402B12: main (rp.cc:100)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n1: 6379904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n2: 6379904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 4692480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 4692480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 4692480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 4692480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 4692480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 4692480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 4692480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 4692480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 4692480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 4692480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 4692480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 4692480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 4692480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 4692480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 4692480 0x402B12: main (rp.cc:100)
    n0: 1687424 in 2 places, all below massif's threshold (1.00%)
  n1: 4732032 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n2: 4732032 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 4692480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 4692480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 4692480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 4692480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 4692480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 4692480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 4692480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 4692480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 4692480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 4692480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 4692480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 4692480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 4692480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 4692480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 4692480 0x402B12: main (rp.cc:100)
    n0: 39552 in 2 places, all below massif's threshold (1.00%)
 n1: 31117128 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 31117128 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 31113432 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 19826856 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 19826856 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 17795232 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 17795232 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 17795232 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 17795232 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 17795232 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 17795232 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 17795232 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 17795232 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 17795232 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 17795232 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 17795232 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 17795232 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 17795232 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 17795232 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 17795232 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n1: 11286576 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 11286576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 10946880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 10946880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10946880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10946880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 10946880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 10946880 0x402B12: main (rp.cc:100)
      n0: 339696 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 17735472 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 17735472 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 15837120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 15837120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 10558080 0x402B12: main (rp.cc:100)
     n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 5279040 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 5279040 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 5279040 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 5279040 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 5279040 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 5279040 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 5279040 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 5279040 0x402B12: main (rp.cc:100)
   n0: 1898352 in 2 places, all below massif's threshold (1.00%)
 n1: 13337712 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n2: 13337712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 13336128 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 8498520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 8498520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 7626528 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 7626528 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 7626528 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 7626528 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 7626528 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 7626528 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 7626528 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 7626528 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 7626528 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 7626528 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 7626528 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 7626528 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 7626528 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 7626528 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 7626528 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n1: 4837608 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 4837608 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 4691520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 4691520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 4691520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 4691520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 4691520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 4691520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 4691520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 4691520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 4691520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 4691520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 4691520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 4691520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 4691520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 4691520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 4691520 0x402B12: main (rp.cc:100)
      n0: 146088 in 1 place, below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 12421584 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 12421584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 10558080 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 10558080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 10558080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 10558080 0x402B12: main (rp.cc:100)
 n1: 9384960 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 9384960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 9384960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 9384960 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 9384960 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 9384960 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 9384960 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 9384960 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 9384960 0x402B12: main (rp.cc:100)
 n1: 9123160 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 9123160 in 9 places, all below massif's threshold (1.00%)
 n2: 8090816 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 8062672 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n2: 8061440 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 5289376 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 5289376 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 5289376 in 3 places, all below massif's threshold (1.00%)
    n0: 2772064 in 2 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 28144 in 1 place, below massif's threshold (1.00%)
 n0: 8079568 in 127 places, all below massif's threshold (1.00%)
 n1: 5927872 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 5927872 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 5927168 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n0: 5927168 in 2 places, all below massif's threshold (1.00%)
   n0: 704 in 1 place, below massif's threshold (1.00%)
 n1: 5323536 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 5323536 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 5279040 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 5279040 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 5279040 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 5279040 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 5279040 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 5279040 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 5279040 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 5279040 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 5279040 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 5279040 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 5279040 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 5279040 0x402B12: main (rp.cc:100)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=6
#-----------
time=817733057
mem_heap_B=528703936
mem_heap_extra_B=68577440
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=952345180
mem_heap_B=597123264
mem_heap_extra_B=78252528
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=8
#-----------
time=1071086079
mem_heap_B=668777904
mem_heap_extra_B=86927624
mem_stacks_B=0
heap_tree=detailed
n16: 668777904 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 178440864 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 150391752 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 150378816 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 115804416 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 115804416 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 61574520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 61574520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 61574520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 61574520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 61574520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 61574520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 61574520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 61574520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 61574520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 61574520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 61574520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 61574520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 61574520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 61574520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 61574520 0x402B12: main (rp.cc:100)
      n2: 54228048 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 42973728 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 42973728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 40995360 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 40995360 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 40995360 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 40995360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 40995360 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 40995360 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 40995360 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 40995360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 40995360 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 40995360 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 40995360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 40995360 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 40995360 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 40995360 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 40995360 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n1: 11254320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
        n2: 11254320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
            n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 10924368 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10924368 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 10924368 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 10924368 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 10924368 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 10924368 0x402B12: main (rp.cc:100)
         n0: 329952 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 22163232 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 22163232 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n2: 9844632 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 8392776 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 8392776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 8172864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 8172864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 8172864 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 8172864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 8172864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 8172864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 8172864 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 8172864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 8172864 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 8172864 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 8172864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 8172864 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 8172864 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 8172864 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 8172864 0x402B12: main (rp.cc:100)
         n0: 219912 in 1 place, below massif's threshold (1.00%)
       n0: 1451856 in 2 places, all below massif's threshold (1.00%)
      n0: 3696 in 1 place, below massif's threshold (1.00%)
    n1: 12411168 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 12411168 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n1: 24635520 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3413592 in 5 places, all below massif's threshold (1.00%)
 n1: 91359240 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 91359240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 54402264 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 43115688 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 43115688 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 41084064 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 41084064 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 41084064 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 41084064 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 41084064 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 41084064 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 41084064 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 41084064 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 41084064 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 41084064 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 41084064 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 41084064 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 41084064 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 41084064 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 41084064 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n1: 11286576 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 11286576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 10946880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 10946880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10946880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10946880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 10946880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 10946880 0x402B12: main (rp.cc:100)
      n0: 339696 in 1 place, below massif's threshold (1.00%)
   n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 67108864 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 67108864 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 67108864 0x4225A9: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (ast.h:8)
    n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 67108864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 67108864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 67108864 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
        n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 67108864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 67108864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 67108864 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
            n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 67108864 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
              n1: 67108864 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
               n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                n1: 67108864 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                 n1: 67108864 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                  n1: 67108864 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                   n0: 67108864 0x402B12: main (rp.cc:100)
   n0: 0 in 11 places, all below massif's threshold (1.00%)
 n3: 64551024 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 49713840 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 49713840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 26395200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 26395200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 26395200 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 26395200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 26395200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 26395200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 26395200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 26395200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 26395200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 26395200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 26395200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 26395200 0x402B12: main (rp.cc:100)
    n2: 23317056 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 18479448 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 18479448 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 17607456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 17607456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 17607456 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 17607456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 17607456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 17607456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 17607456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 17607456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 17607456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 17607456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 17607456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 17607456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 17607456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 17607456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 17607456 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n0: 4837608 in 1 place, below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 9513648 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 9513648 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 9513648 in 3 places, all below massif's threshold (1.00%)
  n0: 5323536 in 1 place, below massif's threshold (1.00%)
 n3: 57378688 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 44190080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 44190080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 23462400 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 23462400 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 23462400 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 23462400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 23462400 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 23462400 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 23462400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 23462400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 23462400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 23462400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 23462400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 23462400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 23462400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 23462400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 23462400 0x402B12: main (rp.cc:100)
    n2: 20726272 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 16426176 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 16426176 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 15651072 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 15651072 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 15651072 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 15651072 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 15651072 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 15651072 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 15651072 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 15651072 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 15651072 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 15651072 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 15651072 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 15651072 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 15651072 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 15651072 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 15651072 0x402B12: main (rp.cc:100)
       n0: 775104 in 1 place, below massif's threshold (1.00%)
     n0: 4300096 in 1 place, below massif's threshold (1.00%)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n1: 8456576 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 8456576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 8456576 in 3 places, all below massif's threshold (1.00%)
  n0: 4732032 in 1 place, below massif's threshold (1.00%)
 n1: 46833528 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 46833528 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n2: 9872856 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 8416464 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 8416464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 8186976 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 8186976 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 8186976 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 8186976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 8186976 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 8186976 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 8186976 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 8186976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 8186976 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 8186976 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 8186976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 8186976 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 8186976 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 8186976 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 8186976 0x402B12: main (rp.cc:100)
      n0: 229488 in 1 place, below massif's threshold (1.00%)
    n0: 1456392 in 2 places, all below massif's threshold (1.00%)
   n0: 7392 in 1 place, below massif's threshold (1.00%)
 n1: 39155760 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 39155760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 23317056 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 18479448 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 18479448 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 17607456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 17607456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 17607456 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 17607456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 17607456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 17607456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 17607456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 17607456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 17607456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 17607456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 17607456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 17607456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 17607456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 17607456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 17607456 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n0: 4837608 in 1 place, below massif's threshold (1.00%)
   n1: 15837120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 15837120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 15837120 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 15837120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 15837120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 15837120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 15837120 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 15837120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 15837120 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 15837120 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 15837120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 15837120 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 15837120 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 15837120 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 15837120 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 20071728 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 20071728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 15837120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 15837120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 10558080 0x402B12: main (rp.cc:100)
     n0: 5279040 in 1 place, below massif's threshold (1.00%)
   n0: 4234608 in 2 places, all below massif's threshold (1.00%)
 n1: 17402560 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 17402560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 10363136 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 8213088 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 8213088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 7825536 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 7825536 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 7825536 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 7825536 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 7825536 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 7825536 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 7825536 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 7825536 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 7825536 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 7825536 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 7825536 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 7825536 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 7825536 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 7825536 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 7825536 0x402B12: main (rp.cc:100)
      n0: 387552 in 1 place, below massif's threshold (1.00%)
    n0: 2150048 in 1 place, below massif's threshold (1.00%)
   n0: 7039424 in 2 places, all below massif's threshold (1.00%)
 n2: 14347320 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 14312656 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n2: 14311424 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 11021024 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 11021024 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 11021024 in 3 places, all below massif's threshold (1.00%)
    n0: 3290400 in 2 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 34664 in 1 place, below massif's threshold (1.00%)
 n1: 13776216 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 13776216 in 9 places, all below massif's threshold (1.00%)
 n0: 13404384 in 127 places, all below massif's threshold (1.00%)
 n2: 12583104 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 12583008 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 12583008 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n2: 12583008 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 12583008 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 12583008 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 12583008 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
        n1: 12583008 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 12583008 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 12583008 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 12583008 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
            n1: 12583008 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 12583008 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
              n1: 12583008 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
               n1: 12583008 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                n1: 12583008 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                 n1: 12583008 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                  n1: 12583008 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                   n0: 12583008 0x402B12: main (rp.cc:100)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
 n1: 12421584 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 12421584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 10558080 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 10558080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 10558080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 10558080 0x402B12: main (rp.cc:100)
 n1: 9384960 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 9384960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 9384960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 9384960 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 9384960 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 9384960 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 9384960 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 9384960 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 9384960 0x402B12: main (rp.cc:100)
#-----------
snapshot=9
#-----------
time=1173489650
mem_heap_B=726555656
mem_heap_extra_B=97151384
mem_stacks_B=0
heap_tree=detailed
n15: 726555656 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 187014408 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 158944128 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 158931192 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 124342680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 124342680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n2: 62766312 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 51511992 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 51511992 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 49533624 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 49533624 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 49533624 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 49533624 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 49533624 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 49533624 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 49533624 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 49533624 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 49533624 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 49533624 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 49533624 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 49533624 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 49533624 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 49533624 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 49533624 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n1: 11254320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
        n2: 11254320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
            n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 10924368 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10924368 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 10924368 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 10924368 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 10924368 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 10924368 0x402B12: main (rp.cc:100)
         n0: 329952 in 1 place, below massif's threshold (1.00%)
      n1: 61574520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 61574520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 61574520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 61574520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 61574520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 61574520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 61574520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 61574520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 61574520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 61574520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 61574520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 61574520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 61574520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 61574520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 61574520 0x402B12: main (rp.cc:100)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 22177344 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 22177344 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n2: 9858744 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 8406888 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 8406888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n0: 8406888 in 2 places, all below massif's threshold (1.00%)
       n0: 1451856 in 2 places, all below massif's threshold (1.00%)
      n0: 3696 in 1 place, below massif's threshold (1.00%)
    n1: 12411168 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 12411168 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n1: 24635520 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3434760 in 5 places, all below massif's threshold (1.00%)
 n1: 124199880 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 124199880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 62607384 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 51320808 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 51320808 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49289184 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 49289184 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 49289184 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 49289184 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 49289184 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 49289184 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 49289184 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 49289184 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 49289184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 49289184 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 49289184 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 49289184 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 49289184 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 49289184 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 49289184 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n1: 11286576 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 11286576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 10946880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 10946880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10946880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10946880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 10946880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 10946880 0x402B12: main (rp.cc:100)
      n0: 339696 in 1 place, below massif's threshold (1.00%)
   n1: 61588800 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 61588800 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 61588800 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 61588800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 61588800 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 61588800 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 61588800 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 61588800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 61588800 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 61588800 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 61588800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 61588800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 61588800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 61588800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 61588800 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n3: 68077872 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 53233776 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 53233776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n2: 26836992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 21999384 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 21999384 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 21127392 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 21127392 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 21127392 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 21127392 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 21127392 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 21127392 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 21127392 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 21127392 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 21127392 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 21127392 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 21127392 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 21127392 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 21127392 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 21127392 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 21127392 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n0: 4837608 in 1 place, below massif's threshold (1.00%)
    n1: 26395200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 26395200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 26395200 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 26395200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 26395200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 26395200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 26395200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 26395200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 26395200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 26395200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 26395200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 26395200 0x402B12: main (rp.cc:100)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 9520560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 9520560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 9520560 in 3 places, all below massif's threshold (1.00%)
  n0: 5323536 in 1 place, below massif's threshold (1.00%)
 n1: 67108864 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 67108864 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 67108864 0x4225A9: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (ast.h:8)
    n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 67108864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 67108864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 67108864 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
        n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 67108864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 67108864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 67108864 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
            n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 67108864 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
              n1: 67108864 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
               n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                n1: 67108864 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                 n1: 67108864 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                  n1: 67108864 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                   n0: 67108864 0x402B12: main (rp.cc:100)
   n0: 0 in 11 places, all below massif's threshold (1.00%)
 n3: 60513664 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 47318912 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 47318912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n2: 23855104 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 19555008 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 19555008 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 18779904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 18779904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 18779904 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 18779904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 18779904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 18779904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 18779904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 18779904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 18779904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 18779904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 18779904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 18779904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 18779904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 18779904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 18779904 0x402B12: main (rp.cc:100)
       n0: 775104 in 1 place, below massif's threshold (1.00%)
     n0: 4300096 in 1 place, below massif's threshold (1.00%)
    n1: 23462400 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 23462400 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 23462400 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 23462400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 23462400 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 23462400 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 23462400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 23462400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 23462400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 23462400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 23462400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 23462400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 23462400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 23462400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 23462400 0x402B12: main (rp.cc:100)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n1: 8462720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 8462720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 8462720 in 3 places, all below massif's threshold (1.00%)
  n0: 4732032 in 1 place, below massif's threshold (1.00%)
 n1: 53230320 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 53230320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 26833536 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 21995928 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 21995928 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 21123936 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 21123936 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 21123936 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 21123936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 21123936 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 21123936 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 21123936 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 21123936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 21123936 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 21123936 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 21123936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 21123936 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 21123936 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 21123936 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 21123936 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n0: 4837608 in 1 place, below massif's threshold (1.00%)
   n1: 26395200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 26395200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 26395200 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 26395200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 26395200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 26395200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 26395200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 26395200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 26395200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 26395200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 26395200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 26395200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 26395200 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 46849656 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 46849656 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n2: 9888984 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 8432592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 8432592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 8432592 in 2 places, all below massif's threshold (1.00%)
    n0: 1456392 in 2 places, all below massif's threshold (1.00%)
   n0: 7392 in 1 place, below massif's threshold (1.00%)
 n1: 23657920 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n3: 23657920 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 11926016 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 9775968 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 9775968 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 9388416 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 9388416 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 9388416 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 9388416 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 9388416 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 9388416 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 9388416 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 9388416 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 9388416 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 9388416 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 9388416 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 9388416 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 9388416 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 9388416 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 9388416 0x402B12: main (rp.cc:100)
      n0: 387552 in 1 place, below massif's threshold (1.00%)
    n0: 2150048 in 1 place, below massif's threshold (1.00%)
   n1: 11731200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 11731200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 11731200 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 11731200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 11731200 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 11731200 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 11731200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 11731200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 11731200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 11731200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 11731200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 11731200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 11731200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 11731200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 11731200 0x402B12: main (rp.cc:100)
   n0: 704 in 1 place, below massif's threshold (1.00%)
 n1: 20078640 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 20078640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 15837120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 15837120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 10558080 0x402B12: main (rp.cc:100)
     n0: 5279040 in 1 place, below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
 n2: 15163888 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 15127176 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n2: 15125944 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 11834200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 11834200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 11834200 in 3 places, all below massif's threshold (1.00%)
    n0: 3291744 in 2 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 36712 in 1 place, below massif's threshold (1.00%)
 n2: 14301016 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 10094048 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 10094048 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 10094048 in 3 places, all below massif's threshold (1.00%)
  n0: 4206968 in 8 places, all below massif's threshold (1.00%)
 n0: 13994904 in 128 places, all below massif's threshold (1.00%)
 n1: 12421584 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 12421584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 10558080 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 10558080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 10558080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 10558080 0x402B12: main (rp.cc:100)
 n1: 9384960 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 9384960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 9384960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 9384960 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 9384960 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 9384960 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 9384960 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 9384960 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 9384960 0x402B12: main (rp.cc:100)
#-----------
snapshot=10
#-----------
time=1281139904
mem_heap_B=784986384
mem_heap_extra_B=105698248
mem_stacks_B=0
heap_tree=detailed
n15: 784986384 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 203076384 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 174998712 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 174985776 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 140397264 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 140397264 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 73889424 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 73889424 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 73889424 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 73889424 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 73889424 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 73889424 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 73889424 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 73889424 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 73889424 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 73889424 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 73889424 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 73889424 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 73889424 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 73889424 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 73889424 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n1: 11254320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
        n2: 11254320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
            n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 10924368 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 10924368 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 10924368 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10924368 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10924368 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 10924368 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 10924368 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 10924368 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 10924368 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 10924368 0x402B12: main (rp.cc:100)
         n0: 329952 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 22177344 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 22177344 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n1: 9858744 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n0: 9858744 in 3 places, all below massif's threshold (1.00%)
      n0: 3696 in 1 place, below massif's threshold (1.00%)
    n1: 12411168 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 12411168 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 12314904 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 12314904 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 12314904 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12314904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12314904 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 12314904 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 12314904 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 12314904 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 12314904 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 12314904 0x402B12: main (rp.cc:100)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n1: 24635520 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3442152 in 5 places, all below massif's threshold (1.00%)
 n1: 140614152 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 140614152 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 73906560 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 73906560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 73906560 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 73906560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 73906560 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 73906560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 73906560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 73906560 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 73906560 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 73906560 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 73906560 0x402B12: main (rp.cc:100)
   n2: 66703896 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n1: 11286576 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 11286576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10946880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 10946880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 10946880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 10946880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 10946880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 10946880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10946880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10946880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 10946880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 10946880 0x402B12: main (rp.cc:100)
      n0: 339696 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n3: 75109104 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 60265008 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 60265008 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 31674240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 31674240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 31674240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 31674240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 31674240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 31674240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 31674240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 31674240 0x402B12: main (rp.cc:100)
    n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 22879584 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n0: 4837608 in 1 place, below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 9520560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 9520560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 9520560 in 3 places, all below massif's threshold (1.00%)
  n0: 5323536 in 1 place, below massif's threshold (1.00%)
 n1: 67108864 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 67108864 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 67108864 0x4225A9: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (ast.h:8)
    n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 67108864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 67108864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 67108864 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
        n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 67108864 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 67108864 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 67108864 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
            n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 67108864 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
              n1: 67108864 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
               n1: 67108864 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                n1: 67108864 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                 n1: 67108864 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                  n1: 67108864 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                   n0: 67108864 0x402B12: main (rp.cc:100)
   n0: 0 in 11 places, all below massif's threshold (1.00%)
 n2: 66763648 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 53568896 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 53568896 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 28154880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 28154880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 28154880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 28154880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 28154880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 28154880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 28154880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 28154880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 28154880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 28154880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 28154880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 28154880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 28154880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 28154880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 28154880 0x402B12: main (rp.cc:100)
    n2: 25412608 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 21112512 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 21112512 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 20337408 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 20337408 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 20337408 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 20337408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 20337408 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 20337408 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 20337408 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 20337408 0x402B12: main (rp.cc:100)
       n0: 775104 in 1 place, below massif's threshold (1.00%)
     n0: 4300096 in 1 place, below massif's threshold (1.00%)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n0: 13194752 in 2 places, all below massif's threshold (1.00%)
 n1: 60265008 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 60265008 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 31674240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 31674240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 31674240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 31674240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 31674240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 31674240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 31674240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 31674240 0x402B12: main (rp.cc:100)
   n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 22879584 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n0: 4837608 in 1 place, below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 46849656 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 46849656 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n1: 9888984 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n0: 9888984 in 3 places, all below massif's threshold (1.00%)
   n0: 7392 in 1 place, below massif's threshold (1.00%)
 n1: 26784448 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n3: 26784448 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 14077440 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 14077440 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 14077440 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 14077440 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 14077440 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 14077440 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 14077440 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 14077440 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 14077440 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 14077440 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 14077440 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 14077440 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 14077440 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 14077440 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 14077440 0x402B12: main (rp.cc:100)
   n2: 12706304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 10556256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 10556256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 10168704 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 10168704 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 10168704 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 10168704 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10168704 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 10168704 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 10168704 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 10168704 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 10168704 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 10168704 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 10168704 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 10168704 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 10168704 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 10168704 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 10168704 0x402B12: main (rp.cc:100)
      n0: 387552 in 1 place, below massif's threshold (1.00%)
    n0: 2150048 in 1 place, below massif's threshold (1.00%)
   n0: 704 in 1 place, below massif's threshold (1.00%)
 n1: 20078640 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 20078640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 15837120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 15837120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 10558080 0x402B12: main (rp.cc:100)
     n0: 5279040 in 1 place, below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
 n2: 16693560 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 16656176 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n2: 16654944 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 13363200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 13363200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 13363200 in 3 places, all below massif's threshold (1.00%)
    n0: 3291744 in 2 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 37384 in 1 place, below massif's threshold (1.00%)
 n2: 15873368 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 10618336 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 10618336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 10618336 in 3 places, all below massif's threshold (1.00%)
  n0: 5255032 in 8 places, all below massif's threshold (1.00%)
 n0: 13404928 in 128 places, all below massif's threshold (1.00%)
 n1: 12421584 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 12421584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 12317760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 12317760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 12317760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 12317760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 12317760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 12317760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 12317760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 12317760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 12317760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 12317760 0x402B12: main (rp.cc:100)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 10558080 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 10558080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 10558080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 10558080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 10558080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 10558080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 10558080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 10558080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 10558080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 10558080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 10558080 0x402B12: main (rp.cc:100)
 n1: 9384960 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 9384960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 9384960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 9384960 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 9384960 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 9384960 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 9384960 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 9384960 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 9384960 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 9384960 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 9384960 0x402B12: main (rp.cc:100)
#-----------
snapshot=11
#-----------
time=1444197286
mem_heap_B=874293728
mem_heap_extra_B=118353464
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=1618328479
mem_heap_B=1040973240
mem_heap_extra_B=137459064
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=1732497514
mem_heap_B=1122677256
mem_heap_extra_B=154769032
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=1886649228
mem_heap_B=1234187408
mem_heap_extra_B=178098704
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=1981252139
mem_heap_B=1280468784
mem_heap_extra_B=184011352
mem_stacks_B=0
heap_tree=detailed
n16: 1280468784 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 373455264 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 234503640 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 234490704 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 165027072 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 165027072 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 98519232 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 98519232 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 98519232 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 98519232 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 98519232 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 98519232 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 98519232 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 98519232 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 98519232 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 98519232 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 98519232 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 98519232 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 98519232 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 98519232 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 98519232 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 44737560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 44737560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 34875120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 34875120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 22560216 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 22560216 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 22560216 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 22560216 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 22560216 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 22560216 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 22560216 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 22560216 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 22560216 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 22560216 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 22560216 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 22560216 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 22560216 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 24726072 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 24726072 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 24629808 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 24629808 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 24629808 in 2 places, all below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n2: 135495360 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 110859840 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 110859840 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 110859840 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 110859840 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 110859840 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 110859840 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 110859840 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 110859840 0x402B12: main (rp.cc:100)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3456264 in 5 places, all below massif's threshold (1.00%)
 n1: 165249672 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 165249672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 98542080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 98542080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 98542080 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 98542080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 98542080 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 98542080 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 98542080 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 98542080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 98542080 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 98542080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 98542080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 98542080 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 98542080 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 98542080 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 98542080 0x402B12: main (rp.cc:100)
   n2: 66703896 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n0: 11286576 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 134217728 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 134217728 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n2: 134217728 0x423995: Env::from(Env const*) (env.h:266)
    n1: 134217728 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
     n1: 134217728 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 134217728 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 134217728 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 134217728 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 134217728 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 134217728 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 134217728 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 134217728 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 134217728 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 134217728 0x402B12: main (rp.cc:100)
    n0: 0 in 3 places, all below massif's threshold (1.00%)
   n0: 0 in 11 places, all below massif's threshold (1.00%)
 n3: 96225264 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 70823088 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 70823088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 42232320 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 42232320 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 42232320 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 42232320 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 42232320 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 42232320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 42232320 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 42232320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 42232320 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 42232320 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 42232320 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 42232320 0x402B12: main (rp.cc:100)
    n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 22879584 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n0: 4837608 in 1 place, below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 14799600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 14799600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 14799600 in 3 places, all below massif's threshold (1.00%)
  n0: 10602576 in 1 place, below massif's threshold (1.00%)
 n2: 85533568 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 62953856 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 62953856 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 37539840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 37539840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 37539840 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 37539840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 37539840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 37539840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 37539840 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 37539840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 37539840 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 37539840 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 37539840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 37539840 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 37539840 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 37539840 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 37539840 0x402B12: main (rp.cc:100)
    n2: 25412608 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 21112512 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 21112512 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 20337408 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 20337408 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 20337408 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 20337408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 20337408 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 20337408 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 20337408 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 20337408 0x402B12: main (rp.cc:100)
       n0: 775104 in 1 place, below massif's threshold (1.00%)
     n0: 4300096 in 1 place, below massif's threshold (1.00%)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n0: 22579712 in 2 places, all below massif's threshold (1.00%)
 n1: 70823088 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 70823088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 42232320 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 42232320 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 42232320 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 42232320 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 42232320 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 42232320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 42232320 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 42232320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 42232320 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 42232320 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 42232320 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 42232320 0x402B12: main (rp.cc:100)
   n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 22879584 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n0: 4837608 in 1 place, below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 58069440 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 47511360 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 47511360 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 47511360 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 47511360 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 47511360 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 47511360 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 47511360 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 47511360 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 47511360 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 47511360 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n2: 51617280 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 42232320 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 42232320 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 42232320 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 42232320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 42232320 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 42232320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 42232320 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 42232320 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 42232320 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 42232320 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 46849656 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 46849656 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n0: 12317760 in 1 place, below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n0: 39640344 in 129 places, all below massif's threshold (1.00%)
 n1: 31674240 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 31674240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 31674240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 31674240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 31674240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 31674240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 31674240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 31674240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 31674240 0x402B12: main (rp.cc:100)
 n1: 31476928 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 31476928 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 18769920 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 18769920 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 18769920 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 18769920 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 18769920 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 18769920 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 18769920 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 18769920 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 18769920 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 18769920 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 18769920 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 18769920 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 18769920 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 18769920 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 18769920 0x402B12: main (rp.cc:100)
   n0: 12707008 in 2 places, all below massif's threshold (1.00%)
 n2: 28456280 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 14812640 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 14812640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 14812640 in 3 places, all below massif's threshold (1.00%)
  n0: 13643640 in 8 places, all below massif's threshold (1.00%)
 n1: 24739344 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 24739344 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 24635520 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n2: 22362048 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 22323312 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n2: 22322080 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 15708896 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 15708896 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 15708896 in 3 places, all below massif's threshold (1.00%)
    n0: 6613184 in 2 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 38736 in 1 place, below massif's threshold (1.00%)
 n1: 20078640 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 20078640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 15837120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 15837120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=16
#-----------
time=2092182029
mem_heap_B=1335884744
mem_heap_extra_B=192770104
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=2236928349
mem_heap_B=1424881512
mem_heap_extra_B=203586320
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=18
#-----------
time=2367214434
mem_heap_B=1496262584
mem_heap_extra_B=215862080
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=19
#-----------
time=2450346708
mem_heap_B=1540484464
mem_heap_extra_B=222434568
mem_stacks_B=0
heap_tree=detailed
n16: 1540484464 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 437113824 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 298147752 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 298134816 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 214286688 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 214286688 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 147778848 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 147778848 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 147778848 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 147778848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 147778848 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 147778848 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 147778848 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 147778848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 147778848 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 147778848 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 147778848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 147778848 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 147778848 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 147778848 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 147778848 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 59122056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 59122056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 36944712 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 36944712 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36944712 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36944712 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 36944712 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 36944712 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 36944712 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 36944712 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 24726072 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 24726072 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 24629808 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 24629808 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 24629808 in 2 places, all below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n2: 135495360 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 110859840 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 110859840 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 110859840 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 110859840 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 110859840 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 110859840 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 110859840 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 110859840 0x402B12: main (rp.cc:100)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3470712 in 5 places, all below massif's threshold (1.00%)
 n1: 214520712 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 214520712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 147813120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 147813120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 147813120 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 147813120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 147813120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 147813120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 147813120 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 147813120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 147813120 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 147813120 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 147813120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 147813120 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 147813120 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 147813120 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 147813120 0x402B12: main (rp.cc:100)
   n2: 66703896 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n0: 11286576 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 134217728 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 134217728 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n2: 134217728 0x423995: Env::from(Env const*) (env.h:266)
    n1: 134217728 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
     n1: 134217728 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 134217728 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 134217728 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 134217728 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 134217728 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 134217728 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 134217728 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 134217728 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 134217728 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 134217728 0x402B12: main (rp.cc:100)
    n0: 0 in 3 places, all below massif's threshold (1.00%)
   n0: 0 in 11 places, all below massif's threshold (1.00%)
 n3: 127899504 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 91939248 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 91939248 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 63348480 0x402B12: main (rp.cc:100)
    n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 22879584 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n0: 4837608 in 1 place, below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 25357680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n2: 25357680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 21116160 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 21116160 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n0: 21116160 in 2 places, all below massif's threshold (1.00%)
    n0: 4241520 in 2 places, all below massif's threshold (1.00%)
  n0: 10602576 in 1 place, below massif's threshold (1.00%)
 n3: 113688448 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 81723776 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 81723776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 56309760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 56309760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 56309760 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 56309760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 56309760 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 56309760 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 56309760 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 56309760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 56309760 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 56309760 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 56309760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 56309760 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 56309760 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 56309760 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 56309760 0x402B12: main (rp.cc:100)
    n2: 25412608 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 21112512 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 21112512 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 20337408 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 20337408 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 20337408 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 20337408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 20337408 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 20337408 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 20337408 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 20337408 0x402B12: main (rp.cc:100)
       n0: 775104 in 1 place, below massif's threshold (1.00%)
     n0: 4300096 in 1 place, below massif's threshold (1.00%)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n1: 22540160 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n2: 22540160 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 18769920 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 18769920 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n0: 18769920 in 2 places, all below massif's threshold (1.00%)
    n0: 3770240 in 2 places, all below massif's threshold (1.00%)
  n0: 9424512 in 1 place, below massif's threshold (1.00%)
 n1: 91939248 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 91939248 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 63348480 0x402B12: main (rp.cc:100)
   n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 22879584 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n0: 4837608 in 1 place, below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n3: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n0: 12317760 in 1 place, below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n2: 58069440 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 47511360 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 47511360 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 47511360 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 47511360 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 47511360 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 47511360 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 47511360 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 47511360 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 47511360 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 47511360 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n2: 51617280 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 42232320 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 42232320 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 42232320 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 42232320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 42232320 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 42232320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 42232320 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 42232320 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 42232320 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 42232320 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 40861888 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 40861888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 28154880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 28154880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 28154880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 28154880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 28154880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 28154880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 28154880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 28154880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 28154880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 28154880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 28154880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 28154880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 28154880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 28154880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 28154880 0x402B12: main (rp.cc:100)
   n0: 12707008 in 2 places, all below massif's threshold (1.00%)
 n1: 35915760 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 35915760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 31674240 in 3 places, all below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
 n0: 33348768 in 129 places, all below massif's threshold (1.00%)
 n2: 32650584 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 19006944 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 19006944 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 19006944 in 3 places, all below massif's threshold (1.00%)
  n0: 13643640 in 8 places, all below massif's threshold (1.00%)
 n1: 31674240 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 31674240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 31674240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 31674240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 31674240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 31674240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 31674240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 31674240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 31674240 0x402B12: main (rp.cc:100)
 n2: 28424760 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 28384656 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n2: 28383424 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 20400288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 20400288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 20400288 in 3 places, all below massif's threshold (1.00%)
    n0: 7983136 in 2 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 40104 in 1 place, below massif's threshold (1.00%)
 n1: 24739344 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 24739344 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 24635520 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=20
#-----------
time=2565229578
mem_heap_B=1617969080
mem_heap_extra_B=230468112
mem_stacks_B=0
heap_tree=detailed
n17: 1617969080 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 460441800 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 321470016 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 321457080 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 59122056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 59122056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 36944712 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 36944712 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36944712 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36944712 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 36944712 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 36944712 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 36944712 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 36944712 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 35733432 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 35733432 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 35637168 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 35637168 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 23322264 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 23322264 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 23322264 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 23322264 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 23322264 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 23322264 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 23322264 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 23322264 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 23322264 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 23322264 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 23322264 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 23322264 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 23322264 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n2: 135495360 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 110859840 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 110859840 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 110859840 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 110859840 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 110859840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 110859840 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 110859840 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 110859840 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 110859840 0x402B12: main (rp.cc:100)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3476424 in 5 places, all below massif's threshold (1.00%)
 n1: 226838472 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 226838472 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n2: 66703896 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n0: 11286576 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 134217728 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 134217728 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n2: 134217728 0x423995: Env::from(Env const*) (env.h:266)
    n1: 134217728 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
     n1: 134217728 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 134217728 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 134217728 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 134217728 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 134217728 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 134217728 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 134217728 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 134217728 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 134217728 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 134217728 0x402B12: main (rp.cc:100)
    n0: 0 in 3 places, all below massif's threshold (1.00%)
   n0: 0 in 11 places, all below massif's threshold (1.00%)
 n3: 133178544 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 22879584 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n0: 4837608 in 1 place, below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 25357680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n2: 25357680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 21116160 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 21116160 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n0: 21116160 in 2 places, all below massif's threshold (1.00%)
    n0: 4241520 in 2 places, all below massif's threshold (1.00%)
  n0: 10602576 in 1 place, below massif's threshold (1.00%)
 n3: 118380928 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n2: 25412608 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 21112512 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 21112512 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 20337408 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 20337408 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 20337408 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 20337408 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 20337408 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 20337408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 20337408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 20337408 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 20337408 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 20337408 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 20337408 0x402B12: main (rp.cc:100)
       n0: 775104 in 1 place, below massif's threshold (1.00%)
     n0: 4300096 in 1 place, below massif's threshold (1.00%)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n1: 22540160 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n2: 22540160 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 18769920 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 18769920 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n0: 18769920 in 2 places, all below massif's threshold (1.00%)
    n0: 3770240 in 2 places, all below massif's threshold (1.00%)
  n0: 9424512 in 1 place, below massif's threshold (1.00%)
 n1: 97218288 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 22879584 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n0: 4837608 in 1 place, below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n3: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n0: 12317760 in 1 place, below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n2: 58069440 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 47511360 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 47511360 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 47511360 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 47511360 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 47511360 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 47511360 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 47511360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 47511360 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 47511360 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 47511360 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 47511360 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n2: 51617280 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 42232320 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 42232320 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 42232320 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 42232320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 42232320 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 42232320 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 42232320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 42232320 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 42232320 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 42232320 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 42232320 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 43208128 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 43208128 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 30501120 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 30501120 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 30501120 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 30501120 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 30501120 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 30501120 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 30501120 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 30501120 0x402B12: main (rp.cc:100)
   n0: 12707008 in 2 places, all below massif's threshold (1.00%)
 n1: 35915760 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 35915760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 31674240 in 3 places, all below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
 n2: 35796312 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 23201248 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 23201248 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 23201248 in 3 places, all below massif's threshold (1.00%)
  n0: 12595064 in 8 places, all below massif's threshold (1.00%)
 n0: 33348840 in 128 places, all below massif's threshold (1.00%)
 n1: 31674240 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 31674240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 31674240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 31674240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 31674240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 31674240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 31674240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 31674240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 31674240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 31674240 0x402B12: main (rp.cc:100)
 n2: 30646480 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 30605824 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n2: 30604592 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 21573136 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 21573136 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 21573136 in 3 places, all below massif's threshold (1.00%)
    n0: 9031456 in 2 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 40656 in 1 place, below massif's threshold (1.00%)
 n1: 24739344 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 24739344 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 24635520 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n2: 18874560 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 18874464 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 18874464 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n2: 18874464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 18874464 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n2: 18874464 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 18874464 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
        n1: 18874464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 18874464 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 18874464 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 18874464 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
            n1: 18874464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 18874464 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
              n1: 18874464 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
               n1: 18874464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                n1: 18874464 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                 n1: 18874464 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                  n1: 18874464 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                   n0: 18874464 0x402B12: main (rp.cc:100)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
#-----------
snapshot=21
#-----------
time=2745125827
mem_heap_B=1720383032
mem_heap_extra_B=255682632
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=22
#-----------
time=2875462683
mem_heap_B=1818903232
mem_heap_extra_B=275276552
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=2967687556
mem_heap_B=1883425480
mem_heap_extra_B=289303192
mem_stacks_B=0
heap_tree=detailed
n16: 1883425480 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 572609184 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 322777560 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 322764624 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 59122056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 59122056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 36944712 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 36944712 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36944712 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36944712 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 36944712 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 36944712 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 36944712 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 36944712 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 37040976 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 37040976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 24629808 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 24629808 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24629808 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 24629808 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 24629808 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 24629808 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 24629808 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 24629808 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 24629808 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 24629808 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 24629808 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 24629808 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 24629808 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n2: 246355200 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 24635520 0x402B12: main (rp.cc:100)
  n0: 3476424 in 5 places, all below massif's threshold (1.00%)
 n1: 226838472 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 226838472 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n2: 66703896 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n0: 11286576 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n3: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
          n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
            n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
             n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
              n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                 n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                  n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                   n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                    n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                     n0: 22879584 0x402B12: main (rp.cc:100)
       n0: 871992 in 1 place, below massif's threshold (1.00%)
     n0: 4837608 in 1 place, below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n1: 25357680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 25357680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 25357680 in 3 places, all below massif's threshold (1.00%)
  n0: 15881616 in 1 place, below massif's threshold (1.00%)
 n1: 134217728 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 134217728 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n2: 134217728 0x423995: Env::from(Env const*) (env.h:266)
    n1: 134217728 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
     n1: 134217728 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 134217728 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 134217728 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 134217728 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 134217728 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 134217728 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 134217728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 134217728 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 134217728 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 134217728 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 134217728 0x402B12: main (rp.cc:100)
    n0: 0 in 3 places, all below massif's threshold (1.00%)
   n0: 0 in 11 places, all below massif's threshold (1.00%)
 n3: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n1: 25412608 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n0: 25412608 in 2 places, all below massif's threshold (1.00%)
    n0: 1408 in 1 place, below massif's threshold (1.00%)
  n1: 22540160 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
   n1: 22540160 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 22540160 in 3 places, all below massif's threshold (1.00%)
  n0: 14116992 in 1 place, below massif's threshold (1.00%)
 n2: 105580800 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 97218288 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n2: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 23751576 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 23751576 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 22879584 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 22879584 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 22879584 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 22879584 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 22879584 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 22879584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 22879584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 22879584 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 22879584 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 22879584 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 22879584 0x402B12: main (rp.cc:100)
      n0: 871992 in 1 place, below massif's threshold (1.00%)
    n0: 4837608 in 1 place, below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 93849600 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n3: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
     n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 24635520 0x402B12: main (rp.cc:100)
     n0: 12317760 in 1 place, below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n0: 53292088 in 129 places, all below massif's threshold (1.00%)
 n2: 44184920 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 23201248 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 23201248 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 23201248 in 3 places, all below massif's threshold (1.00%)
  n0: 20983672 in 8 places, all below massif's threshold (1.00%)
 n1: 43208128 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 43208128 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 30501120 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 30501120 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 30501120 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 30501120 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 30501120 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 30501120 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 30501120 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 30501120 0x402B12: main (rp.cc:100)
   n0: 12707008 in 2 places, all below massif's threshold (1.00%)
 n1: 37057104 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 37057104 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 24635520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 24635520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 24635520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 24635520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 24635520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 24635520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 24635520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 24635520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 24635520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 24635520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 24635520 0x402B12: main (rp.cc:100)
     n0: 12317760 in 1 place, below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 35915760 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 35915760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 31674240 in 3 places, all below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
 n2: 30771000 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 30730352 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n1: 30729120 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n0: 30729120 in 3 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 40648 in 1 place, below massif's threshold (1.00%)
#-----------
snapshot=24
#-----------
time=3092644664
mem_heap_B=2014036144
mem_heap_extra_B=305883232
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=3224146084
mem_heap_B=2262962000
mem_heap_extra_B=320059168
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=26
#-----------
time=3309892102
mem_heap_B=2349066728
mem_heap_extra_B=331539792
mem_stacks_B=0
heap_tree=detailed
n17: 2349066728 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 572609184 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 322777560 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 322764624 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 59122056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 59122056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 36944712 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 36944712 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36944712 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36944712 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 36944712 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 36944712 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 36944712 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 36944712 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 37040976 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 37040976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 36944712 in 2 places, all below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n2: 246355200 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n0: 3476424 in 5 places, all below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 226838472 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 226838472 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n2: 66703896 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n0: 11286576 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n1: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n0: 28589184 in 2 places, all below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n2: 105580800 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 97218288 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n1: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n0: 28589184 in 2 places, all below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 93849600 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n1: 58864984 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 58864984 in 9 places, all below massif's threshold (1.00%)
 n1: 43208128 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 43208128 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 30501120 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 30501120 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 30501120 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 30501120 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 30501120 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 30501120 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 30501120 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 30501120 0x402B12: main (rp.cc:100)
   n0: 12707008 in 2 places, all below massif's threshold (1.00%)
 n0: 37411528 in 133 places, all below massif's threshold (1.00%)
 n1: 35915760 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 35915760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 31674240 in 3 places, all below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
 n2: 30771000 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 30730352 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n1: 30729120 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n0: 30729120 in 3 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 40648 in 1 place, below massif's threshold (1.00%)
#-----------
snapshot=27
#-----------
time=3412380345
mem_heap_B=2420370392
mem_heap_extra_B=346220344
mem_stacks_B=0
heap_tree=detailed
n17: 2420370392 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 616649544 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 322777560 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 322764624 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 59122056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 59122056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 36944712 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 36944712 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36944712 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36944712 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 36944712 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 36944712 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 36944712 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 36944712 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 37040976 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 37040976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 36944712 in 2 places, all below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n3: 290395560 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n1: 44040360 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 44040360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 44040360 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 44040360 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 44040360 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 44040360 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 44040360 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 44040360 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 44040360 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n0: 3476424 in 5 places, all below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 226838472 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 226838472 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n2: 66703896 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n0: 11286576 in 1 place, below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n1: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n0: 28589184 in 2 places, all below massif's threshold (1.00%)
    n0: 1584 in 1 place, below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n2: 124455240 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 29432520 in 2 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n2: 110626880 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 26162240 in 2 places, all below massif's threshold (1.00%)
 n1: 97218288 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n1: 28589184 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n0: 28589184 in 2 places, all below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n1: 48379224 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 48379224 in 9 places, all below massif's threshold (1.00%)
 n1: 43208128 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 43208128 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 30501120 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 30501120 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 30501120 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 30501120 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 30501120 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 30501120 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 30501120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 30501120 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 30501120 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 30501120 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 30501120 0x402B12: main (rp.cc:100)
   n0: 12707008 in 2 places, all below massif's threshold (1.00%)
 n0: 39508872 in 133 places, all below massif's threshold (1.00%)
 n1: 35915760 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n2: 35915760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 31674240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 31674240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 31674240 in 3 places, all below massif's threshold (1.00%)
   n0: 4241520 in 2 places, all below massif's threshold (1.00%)
 n2: 30771000 0x425A54: void std::vector<TypedExpr const*, std::allocator<TypedExpr const*> >::_M_emplace_back_aux<TypedExpr const*>(TypedExpr const*&&) (new_allocator.h:104)
  n2: 30730352 0x426BEC: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (stl_vector.h:924)
   n1: 30729120 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n0: 30729120 in 3 places, all below massif's threshold (1.00%)
   n0: 1232 in 1 place, below massif's threshold (1.00%)
  n0: 40648 in 1 place, below massif's threshold (1.00%)
#-----------
snapshot=28
#-----------
time=3548394202
mem_heap_B=2531228488
mem_heap_extra_B=365741928
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=3682562016
mem_heap_B=2639115976
mem_heap_extra_B=385106752
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=30
#-----------
time=3820409323
mem_heap_B=2757138584
mem_heap_extra_B=404785080
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=3924625089
mem_heap_B=2845381288
mem_heap_extra_B=418903072
mem_stacks_B=0
heap_tree=detailed
n16: 2845381288 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 818964384 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 492710400 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 246355200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 246355200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 246355200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 246355200 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 322777560 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 322764624 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 59122056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 59122056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 36944712 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 36944712 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36944712 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36944712 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 36944712 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 36944712 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 36944712 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 36944712 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 37040976 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 37040976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 36944712 in 2 places, all below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3476424 in 5 places, all below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 248858736 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 248858736 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n2: 88724160 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
    n1: 33306840 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n1: 33306840 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 33306840 in 3 places, all below massif's threshold (1.00%)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n3: 211161600 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 105580800 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 105580800 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 105580800 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 105580800 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n3: 187699200 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 93849600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 93849600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 93849600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 93849600 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 106655544 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 106655544 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n1: 38026440 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n0: 38026440 in 2 places, all below massif's threshold (1.00%)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n0: 79913904 in 134 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n1: 62010712 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 62010712 in 9 places, all below massif's threshold (1.00%)
 n1: 47402464 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n1: 47402464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n0: 47402464 in 3 places, all below massif's threshold (1.00%)
 n1: 35915760 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n1: 35915760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n0: 35915760 in 3 places, all below massif's threshold (1.00%)
#-----------
snapshot=32
#-----------
time=4086318947
mem_heap_B=2985824792
mem_heap_extra_B=438789928
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=4223629475
mem_heap_B=3116962472
mem_heap_extra_B=455611984
mem_stacks_B=0
heap_tree=detailed
n16: 3116962472 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 818964384 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 492710400 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 246355200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 246355200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 246355200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 246355200 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 322777560 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 322764624 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 59122056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 59122056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n2: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 36944712 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 36944712 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36944712 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36944712 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 36944712 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 36944712 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 36944712 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 36944712 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 36944712 0x402B12: main (rp.cc:100)
        n0: 12314904 in 1 place, below massif's threshold (1.00%)
      n0: 9862440 in 2 places, all below massif's threshold (1.00%)
    n1: 37040976 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
     n2: 37040976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 36944712 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 36944712 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 36944712 in 2 places, all below massif's threshold (1.00%)
      n0: 96264 in 2 places, all below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3476424 in 5 places, all below massif's threshold (1.00%)
 n1: 402999408 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 402999408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 242864832 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 187447512 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 187447512 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 176160936 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 176160936 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 176160936 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 176160936 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n3: 211161600 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 105580800 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 105580800 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 105580800 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 105580800 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n3: 187699200 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 93849600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 93849600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 93849600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 93849600 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 172715832 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 172715832 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 104086728 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 80335152 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 80335152 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 75497544 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 75497544 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 75497544 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 75497544 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n2: 84030808 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 48367072 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 48367072 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 48367072 in 3 places, all below massif's threshold (1.00%)
  n0: 35663736 in 8 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 36953280 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 36953280 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 36953280 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 36953280 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 36953280 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 36953280 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 36953280 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 36953280 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 36953280 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 36953280 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 36953280 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n0: 79913904 in 134 places, all below massif's threshold (1.00%)
 n1: 76762592 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 76762592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 46260768 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n0: 46260768 in 2 places, all below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n1: 35915760 0x421C84: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:291)
  n1: 35915760 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n0: 35915760 in 3 places, all below massif's threshold (1.00%)
#-----------
snapshot=34
#-----------
time=4324255329
mem_heap_B=3193311416
mem_heap_extra_B=468069576
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=4469478008
mem_heap_B=3327079696
mem_heap_extra_B=480714088
mem_stacks_B=0
heap_tree=detailed
n16: 3327079696 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 863004744 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 492710400 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 246355200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 246355200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 246355200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 246355200 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 366814560 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 366801624 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 103159056 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 103159056 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 49259616 in 2 places, all below massif's threshold (1.00%)
      n1: 44040696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 44040696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 44037000 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 44037000 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n0: 9858744 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3479784 in 5 places, all below massif's threshold (1.00%)
 n1: 473193672 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 473193672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 313059096 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 257641776 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 257641776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246355200 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n3: 211161600 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 105580800 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 105580800 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 105580800 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 105580800 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 202799088 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 202799088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 134169984 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 110418408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 110418408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 105580800 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n3: 187699200 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 93849600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 93849600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 93849600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 93849600 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n0: 117926928 in 134 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 90132928 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 90132928 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 59631104 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 49074848 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 49074848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 46924800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 46924800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 46924800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 46924800 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n2: 75497568 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 75497472 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 75497472 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n2: 75497472 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 75497472 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n2: 75497472 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
       n1: 75497472 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
        n0: 75497472 0x402B12: main (rp.cc:100)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n2: 58864984 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 39978464 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 39978464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 39978464 in 3 places, all below massif's threshold (1.00%)
  n0: 18886520 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=36
#-----------
time=4580365039
mem_heap_B=3448714512
mem_heap_extra_B=489102904
mem_stacks_B=0
heap_tree=detailed
n16: 3448714512 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 907044936 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 492710400 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 246355200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 246355200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 246355200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 246355200 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 410854584 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 410841648 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n1: 147199080 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 147199080 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 88080720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 88080720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 88077024 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 88077024 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 49259616 in 2 places, all below massif's threshold (1.00%)
      n0: 9858744 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3479952 in 5 places, all below massif's threshold (1.00%)
 n1: 473193672 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 473193672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 313059096 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 257641776 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 257641776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246355200 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n3: 211161600 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 105580800 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 105580800 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 105580800 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 105580800 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 202799088 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 202799088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 134169984 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 110418408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 110418408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 105580800 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n3: 187699200 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 93849600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 93849600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 93849600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 93849600 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n2: 150995040 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 150994944 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 150994944 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n2: 150994944 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 150994944 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n2: 150994944 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
       n1: 150994944 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
        n0: 150994944 0x402B12: main (rp.cc:100)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n0: 120024080 in 134 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 90132928 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 90132928 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 59631104 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 49074848 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 49074848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 46924800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 46924800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 46924800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 46924800 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n2: 58864984 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 39978464 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 39978464 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 39978464 in 3 places, all below massif's threshold (1.00%)
  n0: 18886520 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=37
#-----------
time=4717689606
mem_heap_B=3471845264
mem_heap_extra_B=502456000
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=4802138982
mem_heap_B=3691984144
mem_heap_extra_B=505880536
mem_stacks_B=0
heap_tree=detailed
n16: 3691984144 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 995125320 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 498934800 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 498921864 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 235279296 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 235279296 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 176160936 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 176160936 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 176157240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 176157240 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 49259616 in 2 places, all below massif's threshold (1.00%)
      n0: 9858744 in 1 place, below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n3: 492710400 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 246355200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 246355200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 246355200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 246355200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 246355200 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n0: 3480120 in 5 places, all below massif's threshold (1.00%)
 n1: 473193672 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 473193672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 313059096 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 257641776 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 257641776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246355200 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n2: 301989984 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 301989888 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 301989888 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n2: 301989888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 301989888 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n2: 301989888 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
       n1: 301989888 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
        n0: 301989888 0x402B12: main (rp.cc:100)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n3: 211161600 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 105580800 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 105580800 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 105580800 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 105580800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 105580800 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 202799088 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 202799088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 134169984 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 110418408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 110418408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 105580800 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n3: 187699200 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 93849600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 93849600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 93849600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 93849600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 93849600 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n0: 124218384 in 134 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 90132928 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 90132928 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 59631104 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 49074848 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 49074848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 46924800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 46924800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 46924800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 46924800 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
 n1: 58864984 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 58864984 in 9 places, all below massif's threshold (1.00%)
#-----------
snapshot=39
#-----------
time=4939463549
mem_heap_B=3664783248
mem_heap_extra_B=519233632
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=5042457038
mem_heap_B=3664931296
mem_heap_extra_B=519260024
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=41
#-----------
time=5179781345
mem_heap_B=3664931280
mem_heap_extra_B=519260016
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=5317105872
mem_heap_B=3664931296
mem_heap_extra_B=519260024
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=5420099241
mem_heap_B=3664931280
mem_heap_extra_B=519260016
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=44
#-----------
time=5557423485
mem_heap_B=3507738560
mem_heap_extra_B=505443888
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=5695125585
mem_heap_B=3623840288
mem_heap_extra_B=525157456
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=5832449971
mem_heap_B=3734266136
mem_heap_extra_B=544977480
mem_stacks_B=0
heap_tree=detailed
n15: 3734266136 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1212884736 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 640251024 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 393895824 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 393895824 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 393895824 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 393895824 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 393895824 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 393895824 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 393895824 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 393895824 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 393895824 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 569129064 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 569116128 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 305473560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 305473560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246351504 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246351504 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 49259616 in 2 places, all below massif's threshold (1.00%)
      n0: 9858744 in 1 place, below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3504648 in 5 places, all below massif's threshold (1.00%)
 n1: 473193672 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 473193672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 313059096 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 257641776 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 257641776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246355200 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n3: 274393296 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 168812496 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 168812496 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 168812496 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 168812496 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 168812496 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 168812496 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 168812496 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 168812496 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 168812496 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n3: 243905152 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 150055552 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 150055552 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 150055552 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 150055552 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 150055552 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 150055552 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 150055552 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 150055552 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 150055552 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 202799088 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 202799088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 134169984 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 110418408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 110418408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 105580800 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n0: 122904688 in 135 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 90132928 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 90132928 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 59631104 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 49074848 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 49074848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 46924800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 46924800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 46924800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 46924800 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 67253592 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 67253592 in 9 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
#-----------
snapshot=47
#-----------
time=5934387878
mem_heap_B=3823413144
mem_heap_extra_B=559472592
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=6062172186
mem_heap_B=3926167528
mem_heap_extra_B=577917240
mem_stacks_B=0
heap_tree=detailed
n15: 3926167528 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1311699312 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 739065600 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 492710400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 492710400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 492710400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 492710400 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 569129064 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 569116128 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 305473560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n3: 305473560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246351504 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246351504 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n1: 49259616 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 49259616 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n0: 49259616 in 2 places, all below massif's threshold (1.00%)
      n0: 9858744 in 1 place, below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3504648 in 5 places, all below massif's threshold (1.00%)
 n1: 473193672 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 473193672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 313059096 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 257641776 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 257641776 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246355200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246355200 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n3: 316742400 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 211161600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 211161600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 211161600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 211161600 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n3: 281548800 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 187699200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 187699200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 187699200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 187699200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 187699200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 187699200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 187699200 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 268435456 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 268435456 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 202799088 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 202799088 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 134169984 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 110418408 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 110418408 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 105580800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 105580800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 105580800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 105580800 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n0: 127610144 in 135 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 90132928 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 90132928 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 59631104 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 49074848 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 49074848 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 46924800 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 46924800 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 46924800 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 46924800 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 75642200 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 75642200 in 9 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
#-----------
snapshot=49
#-----------
time=6096503262
mem_heap_B=3955962248
mem_heap_extra_B=582144712
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=6171745294
mem_heap_B=4516460896
mem_heap_extra_B=585469304
mem_stacks_B=0
heap_tree=detailed
n15: 4516460896 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1311699312 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 739065600 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 492710400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 492710400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 492710400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 492710400 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 569129064 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 569116128 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 305473560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 305473560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246351504 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246351504 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n0: 59118360 in 2 places, all below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3504648 in 5 places, all below massif's threshold (1.00%)
 n1: 805306368 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n3: 805306368 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 536870912 0x422364: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 536870912 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 536870912 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 536870912 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 536870912 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 536870912 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 536870912 0x402B12: main (rp.cc:100)
   n1: 268435456 0x422CD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 268435456 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 268435456 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 268435456 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 268435456 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 268435456 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 268435456 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 268435456 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 268435456 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 268435456 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 268435456 0x402B12: main (rp.cc:100)
   n0: 0 in 12 places, all below massif's threshold (1.00%)
 n1: 504894600 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 504894600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 344760024 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 289342704 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 289342704 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 278056128 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 278056128 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 278056128 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 278056128 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n3: 316742400 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 211161600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 211161600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 211161600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 211161600 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n3: 281548800 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 187699200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 187699200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 187699200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 187699200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 187699200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 187699200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 187699200 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n1: 216385200 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 216385200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 147756096 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 124004520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 124004520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 119166912 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 119166912 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 119166912 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 119166912 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n0: 127610136 in 135 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 96171200 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 96171200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 65669376 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 55113120 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 55113120 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 52963072 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 52963072 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 52963072 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 52963072 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 77739352 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 77739352 in 9 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
#-----------
snapshot=51
#-----------
time=6254877608
mem_heap_B=4319806032
mem_heap_extra_B=595717056
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=52
#-----------
time=6338010006
mem_heap_B=4393366592
mem_heap_extra_B=605918168
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=53
#-----------
time=6421142300
mem_heap_B=4463372832
mem_heap_extra_B=616213392
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=6504274626
mem_heap_B=4540498048
mem_heap_extra_B=626321896
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=6587094406
mem_heap_B=4610240992
mem_heap_extra_B=636578400
mem_stacks_B=0
heap_tree=detailed
n15: 4610240992 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1311699312 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 739065600 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 492710400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 492710400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 492710400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 492710400 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 569129064 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 569116128 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 305473560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 305473560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 246355200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 246355200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 246351504 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 246351504 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n0: 59118360 in 2 places, all below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n2: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
          n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
           n1: 53273304 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
            n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
             n1: 53273304 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
              n1: 53273304 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
               n1: 53273304 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
                n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53273304 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53273304 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                   n1: 53273304 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                    n1: 53273304 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                     n1: 53273304 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                      n1: 53273304 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                       n0: 53273304 0x402B12: main (rp.cc:100)
         n0: 1978368 in 1 place, below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3504648 in 5 places, all below massif's threshold (1.00%)
 n1: 719548872 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 719548872 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 559414296 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 503996976 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 503996976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 492710400 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n2: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 53385696 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 53385696 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 53385696 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 53385696 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 53385696 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 53385696 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 53385696 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 53385696 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 53385696 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 53385696 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 53385696 0x402B12: main (rp.cc:100)
      n0: 2031624 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 536870912 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 536870912 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 536870912 0x422364: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 536870912 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 536870912 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 536870912 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 536870912 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 536870912 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 536870912 0x402B12: main (rp.cc:100)
   n0: 0 in 13 places, all below massif's threshold (1.00%)
 n3: 316742400 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 211161600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 211161600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 211161600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 211161600 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 308379888 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 308379888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 239750784 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 215999208 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 215999208 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 211161600 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n3: 281548800 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 187699200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 187699200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 187699200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 187699200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 187699200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 187699200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 187699200 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n1: 137057728 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 137057728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 106555904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 95999648 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 95999648 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 93849600 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n0: 127610136 in 135 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n2: 92419416 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 56755680 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 56755680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 56755680 in 3 places, all below massif's threshold (1.00%)
  n0: 35663736 in 8 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
#-----------
snapshot=56
#-----------
time=6670226719
mem_heap_B=4656508672
mem_heap_extra_B=643465712
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=6697985635
mem_heap_B=4715098944
mem_heap_extra_B=644971336
mem_stacks_B=0
heap_tree=detailed
n16: 4715098944 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1355739672 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 739065600 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 492710400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 492710400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 492710400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 492710400 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 613166064 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 613153128 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 349510560 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 349510560 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 290392200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 290392200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 290388504 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 290388504 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n0: 59118360 in 2 places, all below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n0: 55251672 in 2 places, all below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3508008 in 5 places, all below massif's threshold (1.00%)
 n1: 719548872 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 719548872 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 559414296 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 503996976 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 503996976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 492710400 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 55417320 in 2 places, all below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 536870912 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 536870912 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 536870912 0x422364: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 536870912 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 536870912 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 536870912 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 536870912 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 536870912 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 536870912 0x402B12: main (rp.cc:100)
   n0: 0 in 13 places, all below massif's threshold (1.00%)
 n3: 316742400 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 211161600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 211161600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 211161600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 211161600 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 308379888 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 308379888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 239750784 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 215999208 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 215999208 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 211161600 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n3: 281548800 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 187699200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 187699200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 187699200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 187699200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 187699200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 187699200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 187699200 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n1: 137057728 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 137057728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 106555904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 95999648 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 95999648 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 93849600 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n0: 129707376 in 134 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n2: 75642200 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 56755680 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 56755680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 56755680 in 3 places, all below massif's threshold (1.00%)
  n0: 18886520 in 8 places, all below massif's threshold (1.00%)
 n2: 75497568 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 75497472 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 75497472 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n2: 75497472 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 75497472 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n2: 75497472 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
       n1: 75497472 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
        n0: 75497472 0x402B12: main (rp.cc:100)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
#-----------
snapshot=58
#-----------
time=6781117980
mem_heap_B=4734405152
mem_heap_extra_B=653053328
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=6808872666
mem_heap_B=4836733760
mem_heap_extra_B=653360152
mem_stacks_B=0
heap_tree=detailed
n16: 4836733760 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1399779864 0x42398A: Env::from(Env const*) (env.h:273)
  n3: 739065600 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 492710400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 492710400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 492710400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 492710400 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n2: 657206088 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 657193152 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 393550584 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 393550584 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 334432224 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 334432224 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 334428528 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 334428528 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n0: 59118360 in 2 places, all below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n2: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 55251672 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 55251672 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n0: 55251672 in 2 places, all below massif's threshold (1.00%)
       n0: 11254320 in 1 place, below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n0: 3508176 in 5 places, all below massif's threshold (1.00%)
 n1: 719548872 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 719548872 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 559414296 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 503996976 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 503996976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 492710400 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n1: 55417320 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n1: 55417320 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n0: 55417320 in 2 places, all below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 536870912 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 536870912 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 536870912 0x422364: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 536870912 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 536870912 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 536870912 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 536870912 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 536870912 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 536870912 0x402B12: main (rp.cc:100)
   n0: 0 in 13 places, all below massif's threshold (1.00%)
 n3: 316742400 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 211161600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 211161600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 211161600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 211161600 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 308379888 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 308379888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 239750784 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 215999208 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 215999208 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 211161600 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n3: 281548800 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 187699200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 187699200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 187699200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 187699200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 187699200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 187699200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 187699200 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n2: 150995040 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 150994944 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 150994944 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n2: 150994944 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 150994944 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n2: 150994944 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
       n1: 150994944 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
        n0: 150994944 0x402B12: main (rp.cc:100)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n1: 137057728 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 137057728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 106555904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 95999648 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 95999648 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 93849600 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n0: 131804528 in 134 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n2: 75642200 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 56755680 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 56755680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 56755680 in 3 places, all below massif's threshold (1.00%)
  n0: 18886520 in 8 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
#-----------
snapshot=60
#-----------
time=6892005011
mem_heap_B=4830874144
mem_heap_extra_B=661442144
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=6975137389
mem_heap_B=4875346176
mem_heap_extra_B=669528160
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=7030646609
mem_heap_B=5080003392
mem_heap_extra_B=670137784
mem_stacks_B=0
heap_tree=peak
n16: 5080003392 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1487860248 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 745286304 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 745273368 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 481630800 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 481630800 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 422512440 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 422512440 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 422508744 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 422508744 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n0: 59118360 in 2 places, all below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n1: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n0: 66505992 in 2 places, all below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n3: 739065600 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 492710400 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 492710400 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 492710400 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 492710400 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 492710400 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n0: 3508344 in 5 places, all below massif's threshold (1.00%)
 n1: 719548872 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 719548872 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 559414296 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 503996976 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 503996976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 492710400 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n0: 55417320 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 536870912 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 536870912 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 536870912 0x422364: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 536870912 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 536870912 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 536870912 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 536870912 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 536870912 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 536870912 0x402B12: main (rp.cc:100)
   n0: 0 in 13 places, all below massif's threshold (1.00%)
 n3: 316742400 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 211161600 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 211161600 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 211161600 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 211161600 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 211161600 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 308379888 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 308379888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 239750784 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 215999208 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 215999208 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 211161600 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n2: 301989984 0x426573: void std::vector<ArgPack, std::allocator<ArgPack> >::_M_emplace_back_aux<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (new_allocator.h:104)
  n2: 301989888 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
   n1: 301989888 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
    n2: 301989888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 301989888 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n2: 301989888 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
       n1: 301989888 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
        n0: 301989888 0x402B12: main (rp.cc:100)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 2 places, all below massif's threshold (1.00%)
  n0: 96 in 1 place, below massif's threshold (1.00%)
 n3: 281548800 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 187699200 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 187699200 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 187699200 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 187699200 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 187699200 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 187699200 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 187699200 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 187699200 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n1: 137057728 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 137057728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 106555904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 95999648 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 95999648 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 93849600 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n0: 135998832 in 134 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n1: 75642200 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n0: 75642200 in 9 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
#-----------
snapshot=63
#-----------
time=7113778954
mem_heap_B=5023812128
mem_heap_extra_B=678219760
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=7196911330
mem_heap_B=5052929520
mem_heap_extra_B=683512584
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=7280043607
mem_heap_B=5052929504
mem_heap_extra_B=683512576
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=66
#-----------
time=7363176074
mem_heap_B=5052929520
mem_heap_extra_B=683512584
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=67
#-----------
time=7446308576
mem_heap_B=5052929520
mem_heap_extra_B=683512584
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=68
#-----------
time=7529440892
mem_heap_B=5052929520
mem_heap_extra_B=683512584
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=69
#-----------
time=7612573342
mem_heap_B=5052929520
mem_heap_extra_B=683512584
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=70
#-----------
time=7695705622
mem_heap_B=5046752616
mem_heap_extra_B=671158304
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=71
#-----------
time=7778837966
mem_heap_B=4890075384
mem_heap_extra_B=668680264
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=72
#-----------
time=7861970251
mem_heap_B=4958713088
mem_heap_extra_B=680627472
mem_stacks_B=0
heap_tree=detailed
n15: 4958713088 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 1619811984 0x42398A: Env::from(Env const*) (env.h:273)
  n2: 815480568 0x4269C9: void std::vector<ArgPack, std::allocator<ArgPack> >::emplace_back<ArgPack&, Interpretation const*&, unsigned int>(ArgPack&, Interpretation const*&, unsigned int&&) (resolver-td.cc:85)
   n3: 815467632 0x433EB2: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:220)
    n1: 551825064 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 551825064 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 492706704 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n2: 492706704 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 492703008 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 492703008 0x402B12: main (rp.cc:100)
        n0: 3696 in 1 place, below massif's threshold (1.00%)
      n0: 59118360 in 2 places, all below massif's threshold (1.00%)
    n1: 226601592 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
     n3: 226601592 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
       n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
        n1: 160093752 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
         n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 160093752 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
           n1: 160093752 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
            n1: 160093752 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
             n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160093752 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160093752 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
                n1: 160093752 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
                 n1: 160093752 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                  n1: 160093752 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                   n1: 160093752 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                    n0: 160093752 0x402B12: main (rp.cc:100)
      n1: 66505992 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n0: 66505992 in 2 places, all below massif's threshold (1.00%)
      n0: 1848 in 1 place, below massif's threshold (1.00%)
    n0: 37040976 in 1 place, below massif's threshold (1.00%)
   n0: 12936 in 1 place, below massif's threshold (1.00%)
  n3: 800798544 0x433B28: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:172)
   n1: 554443344 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
    n1: 554443344 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 554443344 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 554443344 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 554443344 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 554443344 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 554443344 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 554443344 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 554443344 0x402B12: main (rp.cc:100)
   n1: 221719680 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
    n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 221719680 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
      n1: 221719680 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
       n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
        n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
         n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
          n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
           n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
              n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
               n0: 221719680 0x402B12: main (rp.cc:100)
   n0: 24635520 in 1 place, below massif's threshold (1.00%)
  n0: 3532872 in 5 places, all below massif's threshold (1.00%)
 n1: 719548872 0x422359: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n3: 719548872 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 559414296 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 503996976 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 503996976 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 492710400 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 492710400 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 492710400 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 492710400 0x402B12: main (rp.cc:100)
      n0: 11286576 in 2 places, all below massif's threshold (1.00%)
    n0: 55417320 in 1 place, below massif's threshold (1.00%)
   n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 160130880 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 160130880 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 160130880 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 160130880 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 160130880 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 160130880 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 160130880 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 160130880 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 160130880 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 160130880 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 160130880 0x402B12: main (rp.cc:100)
   n0: 3696 in 1 place, below massif's threshold (1.00%)
 n1: 536870912 0x410FF4: void std::vector<GC_Object*, std::allocator<GC_Object*> >::_M_emplace_back_aux<GC_Object* const&>(GC_Object* const&) (new_allocator.h:104)
  n2: 536870912 0x410C95: GC_Object::GC_Object() (stl_vector.h:924)
   n1: 536870912 0x422364: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:266)
    n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
     n1: 536870912 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
      n1: 536870912 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
       n1: 536870912 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 536870912 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 536870912 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
          n1: 536870912 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
           n0: 536870912 0x402B12: main (rp.cc:100)
   n0: 0 in 13 places, all below massif's threshold (1.00%)
 n3: 343199304 0x43385B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:179)
  n1: 237618504 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 237618504 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 237618504 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 237618504 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 237618504 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 237618504 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 237618504 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 237618504 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 237618504 0x402B12: main (rp.cc:100)
  n1: 95022720 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 95022720 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 95022720 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 95022720 0x402B12: main (rp.cc:100)
  n0: 10558080 in 1 place, below massif's threshold (1.00%)
 n1: 308379888 0x42232B: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:331)
  n3: 308379888 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 239750784 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 215999208 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 215999208 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 211161600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 211161600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 211161600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 211161600 0x402B12: main (rp.cc:100)
      n0: 4837608 in 2 places, all below massif's threshold (1.00%)
    n0: 23751576 in 1 place, below massif's threshold (1.00%)
   n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
      n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
        n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
         n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
          n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
             n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
              n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
               n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                 n0: 68627520 0x402B12: main (rp.cc:100)
   n0: 1584 in 1 place, below massif's threshold (1.00%)
 n3: 305066112 0x433A83: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:170)
  n1: 211216512 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n1: 211216512 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 211216512 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
     n1: 211216512 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
      n1: 211216512 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 211216512 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 211216512 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
         n1: 211216512 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
          n0: 211216512 0x402B12: main (rp.cc:100)
  n1: 84464640 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 84464640 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 84464640 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 84464640 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 84464640 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 84464640 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 84464640 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 84464640 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 84464640 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 84464640 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 84464640 0x402B12: main (rp.cc:100)
  n0: 9384960 in 1 place, below massif's threshold (1.00%)
 n1: 258776784 0x422CCD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 258776784 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 258672960 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 258672960 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 221719680 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 221719680 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 221719680 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 221719680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 221719680 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 221719680 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 221719680 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 221719680 0x402B12: main (rp.cc:100)
     n0: 36953280 in 2 places, all below massif's threshold (1.00%)
   n0: 103824 in 2 places, all below massif's threshold (1.00%)
 n2: 138457584 0x4340BF: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:250)
  n1: 97218288 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 97218288 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 68627520 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 68627520 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 68627520 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 68627520 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 68627520 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 68627520 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 68627520 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 68627520 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 68627520 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 68627520 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 68627520 0x402B12: main (rp.cc:100)
    n0: 28590768 in 2 places, all below massif's threshold (1.00%)
  n0: 41239296 in 2 places, all below massif's threshold (1.00%)
 n1: 137057728 0x42259A: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:327)
  n2: 137057728 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n2: 106555904 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
    n1: 95999648 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
     n2: 95999648 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
      n1: 93849600 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
       n1: 93849600 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
        n1: 93849600 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
         n0: 93849600 0x402B12: main (rp.cc:100)
      n0: 2150048 in 2 places, all below massif's threshold (1.00%)
    n0: 10556256 in 1 place, below massif's threshold (1.00%)
   n0: 30501824 in 2 places, all below massif's threshold (1.00%)
 n0: 130578256 in 135 places, all below massif's threshold (1.00%)
 n2: 123073408 0x433FC8: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:241)
  n1: 86416256 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
   n2: 86416256 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 61002240 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
       n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 61002240 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
         n1: 61002240 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
          n1: 61002240 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
           n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
            n1: 61002240 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
             n1: 61002240 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
              n1: 61002240 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
               n1: 61002240 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
                n1: 61002240 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
                 n1: 61002240 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
                  n0: 61002240 0x402B12: main (rp.cc:100)
    n0: 25414016 in 2 places, all below massif's threshold (1.00%)
  n0: 36657152 in 2 places, all below massif's threshold (1.00%)
 n1: 110904336 0x422C94: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:357)
  n2: 110904336 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 110859840 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n2: 110859840 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n1: 95022720 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
      n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
       n1: 95022720 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
        n1: 95022720 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
         n1: 95022720 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
          n1: 95022720 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
           n1: 95022720 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
            n1: 95022720 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
             n0: 95022720 0x402B12: main (rp.cc:100)
     n0: 15837120 in 2 places, all below massif's threshold (1.00%)
   n0: 44496 in 2 places, all below massif's threshold (1.00%)
 n1: 83802936 0x421CBD: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (env.h:273)
  n2: 83802936 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
   n1: 73906560 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
    n1: 73906560 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
     n0: 73906560 in 3 places, all below massif's threshold (1.00%)
   n0: 9896376 in 2 places, all below massif's threshold (1.00%)
 n2: 79836504 0x40BB94: void std::vector<Interpretation const*, std::allocator<Interpretation const*> >::_M_emplace_back_aux<Interpretation const*>(Interpretation const*&&) (new_allocator.h:104)
  n1: 56755680 0x422477: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (stl_vector.h:933)
   n1: 56755680 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n0: 56755680 in 3 places, all below massif's threshold (1.00%)
  n0: 23080824 in 8 places, all below massif's threshold (1.00%)
 n1: 63348480 0x43393B: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (mem.h:22)
  n1: 63348480 0x422BD8: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:347)
   n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
    n1: 63348480 0x4332B4: std::vector<Interpretation const*, std::allocator<Interpretation const*> >& ArgCache::operator()<std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}>(Type const*, Expr const*, Env const*, std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*)::{lambda(Type const*, Expr const*, Env const*)#1}) (resolver-td.cc:425)
     n1: 63348480 0x433804: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:166)
      n1: 63348480 0x422070: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:304)
       n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
        n1: 63348480 0x434414: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<std::vector<FuncDecl*, std::allocator<FuncDecl*> > >(Resolver&, std::vector<FuncDecl*, std::allocator<FuncDecl*> > const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
         n1: 63348480 0x421BF2: resolveTo(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Type const*, Env const*, PolyType const*, bool) (resolver-td.cc:282)
          n1: 63348480 0x42126D: resolveWithExtType(Resolver&, Expr const*, Type const*, Env const*, bool) (resolver-td.cc:417)
           n1: 63348480 0x43076C: std::vector<Interpretation const*, std::allocator<Interpretation const*> > resolveToAny<FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> >(Resolver&, FlatMap<Type const*, std::vector<FuncDecl*, std::allocator<FuncDecl*> >, ExtractReturn, TypeMap2> const&, FuncExpr const*, Env const*, Resolver::Mode, PolyType const*) (resolver-td.cc:216)
            n1: 63348480 0x42041F: Resolver::resolve(Expr const*, Env const*, Resolver::Mode) (resolver-td.cc:381)
             n1: 63348480 0x41966F: Resolver::operator()(Expr const*) (resolver.cc:35)
              n0: 63348480 0x402B12: main (rp.cc:100)
